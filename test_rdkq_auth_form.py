#!/usr/bin/env python3
"""
Script pour tester le formulaire avec authentification
"""

import requests
import json
from urllib.parse import urljoin

class RDKQTester:
    def __init__(self):
        self.base_url = "http://127.0.0.1:8002"
        self.session = requests.Session()
        
    def test_login_and_form(self):
        """Test complet avec login et soumission de formulaire"""
        print("üß™ Test complet RDKQ avec authentification")
        print("=" * 50)
        
        # √âtape 1: Test de connexion sans auth
        print("1. Test d'acc√®s au formulaire sans authentification...")
        form_url = urljoin(self.base_url, "/rdkq/admin/mediatheque/new")
        response = self.session.get(form_url, allow_redirects=False)
        
        if response.status_code == 302:
            print("‚úÖ Redirection vers login (normal)")
            print(f"   Redirection vers: {response.headers.get('Location', 'Non sp√©cifi√©')}")
        else:
            print(f"‚ùå Status inattendu: {response.status_code}")
        
        # √âtape 2: Acc√®s √† la page de login
        print("\n2. Test d'acc√®s √† la page de login...")
        login_url = urljoin(self.base_url, "/rdkq/login")
        response = self.session.get(login_url)
        
        if response.status_code == 200:
            print("‚úÖ Page de login accessible")
        else:
            print(f"‚ùå Erreur page login: {response.status_code}")
            return
        
        # √âtape 3: Tentative de login (nous n'avons peut-√™tre pas de compte)
        print("\n3. Test des comptes existants...")
        try:
            # Essayer de cr√©er un compte admin temporaire
            self.create_test_admin()
            
            # Tentative de login
            login_data = {
                'email': 'admin@test.rdkq',
                'password': 'testpass123'
            }
            
            response = self.session.post(login_url, data=login_data, allow_redirects=False)
            print(f"   Status login: {response.status_code}")
            
            if response.status_code == 302:
                print("‚úÖ Login r√©ussi (redirection)")
                
                # √âtape 4: Test du formulaire apr√®s login
                print("\n4. Test du formulaire apr√®s authentification...")
                response = self.session.get(form_url)
                
                if response.status_code == 200:
                    print("‚úÖ Formulaire accessible apr√®s login")
                    
                    # √âtape 5: Test de soumission
                    print("\n5. Test de soumission du formulaire...")
                    self.test_form_submission()
                    
                else:
                    print(f"‚ùå Erreur formulaire apr√®s login: {response.status_code}")
            else:
                print("‚ùå √âchec du login")
                print(f"   Response: {response.text[:200]}...")
                
        except Exception as e:
            print(f"‚ùå Erreur lors du test: {e}")
    
    def create_test_admin(self):
        """Cr√©er un compte admin de test"""
        print("   Cr√©ation d'un compte admin de test...")
        
        # Utiliser l'API directe si disponible
        register_url = urljoin(self.base_url, "/rdkq/register")
        
        register_data = {
            'username': 'admin_test',
            'email': 'admin@test.rdkq',
            'password': 'testpass123'
        }
        
        response = self.session.post(register_url, data=register_data)
        print(f"   Cr√©ation compte: {response.status_code}")
    
    def test_form_submission(self):
        """Test de soumission du formulaire"""
        submit_url = urljoin(self.base_url, "/rdkq/admin/mediatheque/new")
        
        test_data = {
            "title": "Test M√©dia JS",
            "description": "Test avec JavaScript am√©lior√©",
            "category": "formation",
            "author": "Auto-Test",
            "image_url": "/static/RepubliqueduKwebec/Photo/PLAQUE/Plaque Sublimation GN SQ.png",
            "document_url": "",
            "is_public": True,
            "is_featured": False
        }
        
        headers = {
            'Content-Type': 'application/json',
        }
        
        response = self.session.post(submit_url, 
                                   headers=headers, 
                                   data=json.dumps(test_data))
        
        print(f"   Status soumission: {response.status_code}")
        
        if response.status_code == 200:
            try:
                result = response.json()
                print(f"   R√©sultat: {result}")
                
                if result.get('ok'):
                    print("‚úÖ M√©dia cr√©√© avec succ√®s!")
                else:
                    print(f"‚ùå Erreur: {result.get('error')}")
                    
            except json.JSONDecodeError:
                print(f"   Response text: {response.text[:200]}...")
        else:
            print(f"   Erreur HTTP: {response.status_code}")
            print(f"   Response: {response.text[:200]}...")

if __name__ == "__main__":
    tester = RDKQTester()
    tester.test_login_and_form()
